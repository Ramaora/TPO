/**
 \file		: FW_isr.c
 \brief     : Isr de interrupciones externas
 \details   :
 \author    : GOS
 \date 	    : 2014.05.06
*/

#include "Aplicacion.h"

/**
 * \fn void TIMER0_IRQHandler (void)
 * \brief ISR de timer0
 * \details Limpia flag y guarda captura Ch0 para ser usada en otra parte del programa
 * \author GOS
 * \date   2014.05.06
 * \param [in] void
 * \return void
 * */

void TIMER0_IRQHandler (void)
{
	static uint16_t i=0;
	printf ("entre");
	if(T0IR & MR0)
	{
		// Si interrumpio match 0
		T0IR |= MR0; 						//!< Borro flag del Match 0
		Write_Dac(bufferwav[i]);
		i++;
		i%=cant;

	}
}


/**
 * \fn void TIMER0_IRQHandler (void)
 * \brief ISR de timer1
 * \details Limpia flags de match 0 a match 4 segun corresponda y marca evento
 * \author GOS
 * \date   2014.05.06
 * \param [in] void
 * \return void
 * */
void TIMER1_IRQHandler (void)
{
	if((T1IR & MR0))
	{
		//!< Si interrumpio match 0
		T1IR |= MR0; 		//!< Borro flag del Match 0
		flagTimer++;
	}
    if((T1IR & MR1))
    {
    	//!< Si interrumpio match 1
    	T1IR |= MR1; 		//!< Borro flag del Match 1
		flagTimer++;
    }
    if((T1IR & MR2))
   {
    	//!< Si interrumpio match 2
    	T1IR |= MR2; 		//!<  Borro flag del Match 2
		flagTimer++;
   }
    if((T1IR & MR3))
   {
    	//!< Si interrumpio match 3
    	T1IR |= MR3; 		//!< Borro flag del Match 3
   		flagTimer++;
   }
}
